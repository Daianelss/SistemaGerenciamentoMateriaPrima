DROP DATABASE `gerenciamentomateriaprima`

-- SQL para criar o banco de dados
CREATE DATABASE IF NOT EXISTS `gerenciamentomateriaprima`;

-- Define o banco de dados a ser utilizado
USE `gerenciamentomateriaprima`;

-- SQL para criar a tabela FUNCIONARIO
CREATE TABLE IF NOT EXISTS `gerenciamentomateriaprima`.`FUNCIONARIO` (
  `FUNC_ID` INT NOT NULL AUTO_INCREMENT,
  `FUNC_NOME` VARCHAR(45) NULL,
  `FUNC_STATUS` INT,

  PRIMARY KEY (`FUNC_ID`)
);

-- SQL para criar a tabela TIPO_MOVIMENTACAO
CREATE TABLE IF NOT EXISTS `gerenciamentomateriaprima`.`TIPO_MOVIMENTACAO` (
  `TIMO_ID` INT NOT NULL AUTO_INCREMENT,
  `TIMO_NOME` VARCHAR(45) NULL,
  `TIMO_STATUS` INT,
  PRIMARY KEY (`TIMO_ID`)
);

-- SQL para criar a tabela MOVIMENTACAO
CREATE TABLE IF NOT EXISTS `gerenciamentomateriaprima`.`MOVIMENTACAO` (
  `MOVI_ID` INT NOT NULL AUTO_INCREMENT,
  `MOVI_DATE` DATE NOT NULL,
  `MOVI_PESO` DOUBLE NULL,
  `MOVI_DESC` VARCHAR(300) NULL,
  `MOVI_PESOSAIDA` DOUBLE NULL,
  `MOVI_PROC_ID` INT NULL,
  `MOVI_FUNC_ID` INT NULL,
  PRIMARY KEY (`MOVI_ID`),
  INDEX `PROC_ID_idx` (`MOVI_PROC_ID` ASC) VISIBLE,
  INDEX `MOVI_FUNC_ID_idx` (`MOVI_FUNC_ID` ASC) VISIBLE,
  CONSTRAINT `MOVI_PROC_ID`
    FOREIGN KEY (`MOVI_PROC_ID`)
    REFERENCES `gerenciamentomateriaprima`.`TIPO_MOVIMENTACAO` (`TIMO_ID`),
  CONSTRAINT `MOVI_FUNC_ID`
    FOREIGN KEY (`MOVI_FUNC_ID`)
    REFERENCES `gerenciamentomateriaprima`.`FUNCIONARIO` (`FUNC_ID`)
);

-- SQL para criar a tabela TIPO_MATERIA_PRIMA
CREATE TABLE IF NOT EXISTS `gerenciamentomateriaprima`.`TIPO_MATERIA_PRIMA` (
  `TIMP_ID` INT NOT NULL AUTO_INCREMENT,
  `TIMP_NOME` VARCHAR(45) NULL,
  `TIMP_DESCRICAO` VARCHAR(250) NULL,
  `TIMP_STATUS` INT,
  PRIMARY KEY (`TIMP_ID`)
);

-- SQL para criar a tabela MATERIA_PRIMA
CREATE TABLE IF NOT EXISTS `gerenciamentomateriaprima`.`MATERIA_PRIMA` (
  `MATE_ID` INT NOT NULL AUTO_INCREMENT,
  `MATE_DATA` DATE NULL,
  `MATE_PESO` DOUBLE NULL,
  `MATE_DESCRICAO` VARCHAR(100) NULL,
  `MATE_TPMP_ID` INT NULL,
  PRIMARY KEY (`MATE_ID`),
  INDEX `MATE_TPMP_ID_idx` (`MATE_TPMP_ID` ASC) VISIBLE,
  CONSTRAINT `MATE_TPMP_ID`
    FOREIGN KEY (`MATE_TPMP_ID`)
    REFERENCES `gerenciamentomateriaprima`.`TIPO_MATERIA_PRIMA` (`TIMP_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);
